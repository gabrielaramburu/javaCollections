package tree.binarytree;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public class ArrayToTreeTest {
	@Test
	@Disabled
	public void emptyArray() {
		TreeNode expected = null;
		assertEquals(ArrayToTree.arrayToTree(arrayFrom()), expected);
	}
	
	@Test
	@Disabled
	public void smallArray() {
		int array[] = { 17, 0, -4, 3};
		ArrayToTree.arrayToTree(array);
	}
	

	@Test
	@Disabled
	public void arrayWithMultipleElements() {
		int array[] = { -730, -98, -530, 371, -89, 964, 226, 761, -540, -58, -910, -716, -839, 33};
		ArrayToTree.arrayToTree(array);
	}

	@Test
	public void bigArray() {
		int array[] = { 412, 936, 694, 837, -198, 337, 913, 847, 72, -247, -786, -864, -9, 923, 903, 842, -750, -982,
				818, -67, 930, 114, 388, 231, 968, 256, -608, 652, -4, 64, -359, 200, -851, 321, -954, 825, -713, 209,
				-680, 565, 163, -887, 293, -646, 137, -672, 511, -898, 186, 183, 322, 620, 488, 636, -886, -807, 578,
				-148, -55, -543, 12, 559, 694, 932, -802, -68, 84, -921, -757, 812, -135, 232, -616, -573, 473, 646,
				-702, 253, -858, 644, 925, 721, 39, -260, -967, -654, 510, 768, 889, -52, 345, -780, 741, -202, -335,
				494, -702, -424, -316, 761, -855, -475, 654, 746, -162, 811, -304, -209, 164, -66, 740, 983, 34, 685,
				-478, -420, -821, -748, 370, -108, 362, 130, 2, -856, 452, -572, 551, 666, -546, 592, 394, -20, 108,
				442, 715, 665, -375, -228, -863, -58, -296, 591, -509, 322, -258, -678, 119, -264, 346, 129, -685, -245,
				-514, 766, -561, -422, 612, 181, 294, -533, -137, -424, -956, -604, -888, -980, -323, 178, 38, 850,
				-747, -81, -429, 425, 363, -485, 251, -809, 966, -920, 101, 542, 493, 367, -445, -281, 364, -147, 951,
				-725, -760, -789, -289, 959, -689, -895, -569, 446, 336, -512, -309, 273, 92, -887, 667, -612, -993,
				-132, -796, -275, 526, 92, -365, -740, 812, 425, 800, -38, -49, 995, 613, -261, -890, 153, 170, 546,
				-236, -410, -869, 638, 980, 435, -516, -413 };
		ArrayToTree.arrayToTree(array);
	}

	private int[] arrayFrom(int... values) {
		return values;
	}
}
